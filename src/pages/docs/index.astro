---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

// Fetch docs collection and sort by the index field in ascending order
const docs = (await getCollection('docs')).sort((a, b) => a.data.index - b.data.index);
---

<Layout>
  <!-- Documentation Section -->
  <section class="py-16 bg-dark text-light">
    <div class="max-w-7xl mx-auto px-4 lg:px-12">
      <h1 class="text-5xl font-extrabold mb-6 mt-40 text-center">Documentation</h1>
      <p class="text-lg text-gray-400 mb-10 text-center">
        Explore our guides and resources. Use the search bar below to filter documents.
      </p>

      <!-- Search Bar -->
      <div class="mb-10 text-center">
        <input
          id="searchInput"
          type="text"
          placeholder="Search documentation..."
          class="w-full md:w-1/2 px-4 py-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-accent"
        />
      </div>

      <!-- Documentation Cards -->
      <div id="docsGrid" class="mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 bg-blue w-full">
        {docs.map((doc) => (
          <a
            href={`/docs/${doc.slug}`}
            class="doc-card group p-6 rounded-lg bg-white/5 hover:bg-white/10 transition-all duration-300 shadow-lg"
            data-title={doc.data.title.toLowerCase()}
            data-description={doc.data.description.toLowerCase()}
          >
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-2xl font-semibold text-light group-hover:text-accent transition-colors">
                {doc.data.title}
              </h3>
              <span class="text-sm text-gray-400">Index: {doc.data.index}</span>
            </div>
            <p class="text-gray-400 text-sm leading-relaxed">{doc.data.description}</p>
          </a>
        ))}
      </div>

      <!-- No Results Message -->
      <div id="noResults" class="hidden text-center text-gray-400 mt-12">
        No results found for your query.
      </div>
    </div>
  </section>
</Layout>

<script>
  // Wait for DOM to load before initializing search functionality
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('searchInput');
    const docsGrid = document.getElementById('docsGrid');
    const docCards = Array.from(docsGrid.getElementsByClassName('doc-card'));
    const noResults = document.getElementById('noResults');

    searchInput.addEventListener('input', () => {
      const query = searchInput.value.toLowerCase();
      let visibleCount = 0;

      docCards.forEach((card) => {
        const title = card.dataset.title;
        const description = card.dataset.description;

        if (title.includes(query) || description.includes(query)) {
          card.style.display = 'block';
          visibleCount++;
        } else {
          card.style.display = 'none';
        }
      });

      noResults.style.display = visibleCount === 0 ? 'block' : 'none';
    });
  });
</script>
